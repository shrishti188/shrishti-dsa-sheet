class Solution:
    def isBalancedParentheses(self, s: str) -> bool:
        stack = []
        mapping = {')': '(', '}': '{', ']': '['}
        
        for char in s:
            if char in mapping.values():  # opening brackets
                stack.append(char)
            elif char in mapping:  # closing brackets
                if not stack or stack[-1] != mapping[char]:
                    return False
                stack.pop()
        return not stack  # stack should be empty if balanced


# Driver code to read input and output result
if __name__ == "__main__":
    T = int(input())
    sol = Solution()
    for _ in range(T):
        string = input().strip()
        print(1 if sol.isBalancedParentheses(string) else 0)
